name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # every week (for --pre release tests)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pipx run check-manifest

  test:
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    secrets: inherit
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      pip-install-pre-release: ${{ github.event_name == 'schedule' }}
      report-failures: ${{ github.event_name == 'schedule' }}
      extras: 'pptx,test'
      # changing this to "artifact" prevents uploading to codecov here,
      # instead it uploads an artifact with the coverage data
      coverage-upload: artifact
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]#, "3.13"]
        include:
          - python-version: "3.9"
            os: ubuntu-latest
          - python-version: "3.9"
            os: macos-13
          - python-version: "3.11"
            os: macos-latest
          - python-version: "3.12"
            os: macos-latest

  # now add an additional job to combine and upload the coverage
  upload_coverage:
    if: always()
    needs: [test]
    uses: pyapp-kit/workflows/.github/workflows/upload-coverage.yml@v2
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}


  deploy_test:
    name: Deploy to PyPI (test)
    needs: [test, check-manifest]
    if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build
        run: |
          python -m pip install build
          python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_TOKEN }}

  deploy:
    name: Deploy
    needs: [test, check-manifest, deploy_test]
    if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'schedule'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build
        run: |
          python -m pip install build
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: dist/*
